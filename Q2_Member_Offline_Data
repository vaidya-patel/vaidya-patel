-- This query pulls PRIMARY MEMBERS (SHARE)

SELECT
	ACCOUNT.ACCOUNT_NUMBER,	
	SHARE.ID AS ID,
	ACCOUNT.ACCOUNT_NUMBER || SHARE.ID AS COMBINED_ACCOUNT_NUMBER,	
	PERSON.TIN AS TAX_ID,	
	SH_TYPE.SERIAL AS HOST_PRODUCT_CODE,
	SH_TYPE.CATEGORY AS HOST_PRODUCT_TYPE_CODE, 
	CASE
		WHEN ACCOUNT.PRIMARY_PERSON_SERIAL IS NOT NULL THEN 'V'
	 	END AS HOST_RELATION_CODE
FROM
	CORE.ACCOUNT AS ACCOUNT
	INNER JOIN CORE.SHARE AS SHARE ON SHARE.PARENT_SERIAL = ACCOUNT.SERIAL
	INNER JOIN CORE.SH_TYPE AS SH_TYPE ON SHARE.TYPE_SERIAL = SH_TYPE.SERIAL
	INNER JOIN CORE.PERSON AS PERSON ON ACCOUNT.PRIMARY_PERSON_SERIAL = PERSON.SERIAL
WHERE
	SHARE.CLOSE_DATE IS NULL
	AND PERSON.TIN IS NOT NULL

UNION ALL
	
-- This query pulls any ASSOCIATED PERSONS (SHARE)

SELECT		
	ACCOUNT.ACCOUNT_NUMBER,
	SHARE.ID AS ID,
	ACCOUNT.ACCOUNT_NUMBER || SHARE.ID AS COMBINED_ACCOUNT_NUMBER,	
	PERSON.TIN AS TAX_ID,	
	SH_TYPE.SERIAL AS HOST_PRODUCT_CODE, 	 		
	SH_TYPE.CATEGORY AS HOST_PRODUCT_TYPE_CODE,
	CASE 
	 WHEN SH_PERSON_LINK.CATEGORY IN ('JT', 'AS', 'TR', 'CU', 'GD', 'CV', 'RP', 'VF', 'AD', 'EX') THEN 'V'
	 ELSE ' '
	END AS HOST_RELATION_CODE	
FROM
	CORE.ACCOUNT AS ACCOUNT
	INNER JOIN CORE.SHARE AS SHARE ON SHARE.PARENT_SERIAL = ACCOUNT.SERIAL
	INNER JOIN CORE.SH_TYPE AS SH_TYPE ON SHARE.TYPE_SERIAL = SH_TYPE.SERIAL
	INNER JOIN CORE.SH_PERSON_LINK AS SH_PERSON_LINK ON SHARE.SERIAL = SH_PERSON_LINK.PARENT_SERIAL
	INNER JOIN CORE.PERSON AS PERSON ON ACCOUNT.PRIMARY_PERSON_SERIAL = PERSON.SERIAL
WHERE
	SHARE.CLOSE_DATE IS NULL
	AND PERSON.TIN IS NOT NULL
	AND PERSON.FIRST_NAME IS NOT NULL

UNION ALL
	
-- This query pulls PRIMARY MEMBERS (LOAN)

SELECT
	ACCOUNT.ACCOUNT_NUMBER,	
	LOAN.ID AS ID,
	ACCOUNT.ACCOUNT_NUMBER || LOAN.ID AS COMBINED_ACCOUNT_NUMBER,	
	PERSON.TIN AS TAX_ID,	
	LN_TYPE.SERIAL AS HOST_PRODUCT_CODE,
	LN_TYPE.CATEGORY AS HOST_PRODUCT_TYPE_CODE,
	CASE 
	    WHEN ACCOUNT.PRIMARY_PERSON_SERIAL IS NOT NULL THEN 'V'
	    END AS HOST_RELATION_CODE
FROM
	CORE.ACCOUNT AS ACCOUNT
	INNER JOIN CORE.LOAN AS LOAN ON LOAN.PARENT_SERIAL = ACCOUNT.SERIAL
	INNER JOIN CORE.LN_TYPE AS LN_TYPE ON LOAN.TYPE_SERIAL = LN_TYPE.SERIAL
	INNER JOIN CORE.PERSON AS PERSON ON ACCOUNT.PRIMARY_PERSON_SERIAL = PERSON.SERIAL
WHERE
	LOAN.CLOSE_DATE IS NULL
	
UNION ALL
	
-- This query pulls any ASSOCIATED PERSONS (LOAN)

SELECT		
	ACCOUNT.ACCOUNT_NUMBER,
	LOAN.ID AS ID,
	ACCOUNT.ACCOUNT_NUMBER || LOAN.ID AS COMBINED_ACCOUNT_NUMBER,	
	PERSON.TIN AS TAX_ID,	
	LN_TYPE.SERIAL AS HOST_PRODUCT_CODE, 	 		
	LN_TYPE.CATEGORY AS HOST_PRODUCT_TYPE_CODE,
	CASE 
	 WHEN LN_PERSON_LINK.CATEGORY IN ('CB', 'AS', 'TR', 'CU', 'GD', 'CV', 'AD', 'EX') THEN 'V'
	 ELSE ' '
	END AS HOST_RELATION_CODE	
FROM
	CORE.ACCOUNT AS ACCOUNT
	INNER JOIN CORE.LOAN AS LOAN ON LOAN.PARENT_SERIAL = ACCOUNT.SERIAL
	INNER JOIN CORE.LN_TYPE AS LN_TYPE ON LOAN.TYPE_SERIAL = LN_TYPE.SERIAL
	INNER JOIN CORE.LN_PERSON_LINK AS LN_PERSON_LINK ON LOAN.SERIAL = LN_PERSON_LINK.PARENT_SERIAL
	INNER JOIN CORE.PERSON AS PERSON ON ACCOUNT.PRIMARY_PERSON_SERIAL = PERSON.SERIAL
WHERE
	LOAN.CLOSE_DATE IS NULL
	AND PERSON.TIN IS NOT NULL
	AND PERSON.FIRST_NAME IS NOT NULL;
